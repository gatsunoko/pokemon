.p-poke-diff
  %h1{ class: "p-poke-diff__title" } ポケファイト

  = form_with(url: poke_search_pokes_path, method: :get, class: 'p-poke-diff__search') do |f|
    = f.text_field :keyword, id: 'poke_list', class: 'form-control p-poke-diff__search-input', placeholder: "ポケモンの名前で検索"
    %button{type: :submit, class: "p-poke-diff__search-button"}
      %i.fas.fa-search

  #js-none.p-poke-diff__none
  #js-poke.p-poke-diff__table-outer
    %table#js-poke-table.table.p-poke-diff__table
      %tr
        %th 名前
      - ["HP", "攻撃", "防御", "特攻", "特防", "早さ"].each do |key|
        %tr
          %th
            = key
      %tr
        %th タ1
      %tr
        %th タ2
      - ["4倍", "2倍", "0.5倍", "0.25倍", "無効"].each do |key|
        %tr
          %th
            = key
      %tr
        %th 操作

:javascript
  $(function() {
    $('#poke_list').autocomplete({
      source: "/pokes/auto_complete.json",
      delay: 500,
      minLength: 2,
      keydown: function(event, ui) {
        $("#poke_list").val(ui.item.name);
        return false;
      },
      select: function(event, ui) {
        $('#poke_list').val(ui.item.name);
        return false;
      }
    }).data("ui-autocomplete")._renderItem = function(ul, item) {
      return $("<li>").attr("data-value", item.name).data("ui-autocomplete-item", item).append("<a>" + item.name + "</a>").appendTo(ul);
    };
  });

  function statusChange(element, add) {
    let status_element = $(element).siblings(".js-poke-status")
    let counter_element = $(element).siblings(".js-poke-counter")

    let init = status_element.data("init");
    let after_count = parseInt(counter_element.text().replace(/\(/, '').replace(/\)/, '')) + add;

    if (after_count >= 1 && after_count <= 6) {
      status_element.text(Math.floor(init * (1 + 0.5 * after_count)));
    }
    else if (after_count == 0) {
      status_element.text(init);
    }
    else if (after_count >= -6 && after_count < 0) {
      status_element.text(Math.floor(init * (2 / (2 - after_count))));
    }

    if (after_count >= -6 && after_count <= 6) {
      counter_element.text(`(${after_count})`);
    }
  }

  function resetPokeTableIndex() {
    $("#js-poke-table tr").each(function(){
      var index = 0;

      $(this).find("td").each(function(){
        $(this).attr("data-index", index);
        index++;
      })
    })
  }

  function pokeMove(element, move) {
    let index = parseInt($(element).closest("td").attr("data-index"));

    $("#js-poke-table tr").each(function(){
      let target = $(this).find(`td[data-index="${index}"]`);
      let base_element = $(this).find(`td[data-index="${index + move}"]`);

      if(base_element.length) {
        if(move == 1) {
          base_element.after(target);
        }
        else if (move == -1) {
          base_element.before(target);
        }
      }
    })

    resetPokeTableIndex();
  }

  function pokeRemove(element) {
    let index = $(element).closest("td").attr("data-index");
    $(`#js-poke-table td[data-index="${index}"]`).remove();
    resetPokeTableIndex();
  }
